--! ------------------------------------------
--! SERIAL vs IDENTITY en PostgreSQL
--! ------------------------------------------
--! DESCRIPCIÓN DE LA SINTAXIS:
--* SERIAL: crea una secuencia automática para cada inserción. Los valores generados son únicos y secuenciales.
--* IDENTITY: también crea una secuencia automática, pero con más opciones de personalización y control sobre cómo se generan los valores.
--! SERIAL:
--* 1. Crea una secuencia automática que incrementa de 1 en 1 por defecto.
--* 2. Los valores de la secuencia pueden ser sobrescritos manualmente si no están duplicados.
--* 3. Es una opción rápida y sencilla para generar identificadores únicos.
CREATE TABLE "users"(
    "user_id" SERIAL PRIMARY KEY,
    --! ID único generado automáticamente
    "username" VARCHAR(100) --! Nombre de usuario
);

--! IDENTITY:
--* 1. También crea una secuencia automática.
--* 2. Ofrece más control sobre la generación de valores.
--* 3. Se puede especificar si los valores se generan siempre automáticamente o sólo si no se proporciona uno manualmente.
--* 4. Se puede personalizar la secuencia (por ejemplo, incrementos diferentes a 1).
--! GENERATED BY DEFAULT AS IDENTITY:
--* 1. Crea una secuencia automática.
--* 2. Permite la inserción manual de valores si se desea.
--* 3. Si no se proporciona un valor, se usa la secuencia.
CREATE TABLE "users_two"(
    "user_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    --! ID generado automáticamente o manualmente
    "username" VARCHAR(100) --! Nombre de usuario
);

--! GENERATED ALWAYS AS IDENTITY:
--* 1. Crea una secuencia automática.
--* 2. No permite la inserción manual de valores.
--* 3. Los valores siempre se generan usando la secuencia.
CREATE TABLE "users_three"(
    "user_id" INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    --! ID siempre generado automáticamente
    "username" VARCHAR(100) --! Nombre de usuario
);

--! PERSONALIZACIÓN DE SECUENCIA CON IDENTITY:
--* 1. Se puede especificar el valor inicial de la secuencia.
--* 2. Se puede especificar el incremento de la secuencia.
--* 3. Los valores siempre se generan usando la secuencia.
CREATE TABLE "users_four"(
    "user_id" INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 100 INCREMENT BY 2) PRIMARY KEY,
    --! ID siempre generado automáticamente, empezando en 100 y aumentando de 2 en 2
    "username" VARCHAR(100) --! Nombre de usuario
);

--! RESUMEN:
--* SERIAL es útil para configuraciones rápidas y simples de ID únicos.
--* IDENTITY ofrece más flexibilidad y control sobre la generación de ID, con opciones para personalización y restricciones de inserción manual.